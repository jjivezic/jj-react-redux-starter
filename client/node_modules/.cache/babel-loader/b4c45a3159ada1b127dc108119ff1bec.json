{"ast":null,"code":"import { userConstants } from '../constants';\nimport userService from '../../_services/user.service';\nimport { history } from '../../_utils';\nexport const userActions = {\n  login // logout,\n  // register,\n  // getAll,\n  // delete: _delete\n\n};\n\nfunction login(data) {\n  return dispatch => {\n    dispatch(request({\n      email: data.email\n    }));\n    userService.login(data).then(user => {\n      dispatch(success(user));\n      localStorage.setItem('user', JSON.stringify(user));\n      history.push('/app');\n    }, error => {\n      console.log('error', error);\n      dispatch(failure(error));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n} // function logout() {\n//     userService.logout();\n//     return { type: userConstants.LOGOUT };\n// }\n// function register(user) {\n//     return dispatch => {\n//         dispatch(request(user));\n//         userService.register(user)\n//             .then(\n//                 user => { \n//                     dispatch(success());\n//                     history.push('/login');\n//                     dispatch(alertActions.success('Registration successful'));\n//                 },\n//                 error => {\n//                     dispatch(failure(error));\n//                     dispatch(alertActions.error(error));\n//                 }\n//             );\n//     };\n//     function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n//     function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n//     function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n// }\n// function getAll() {\n//     return dispatch => {\n//         dispatch(request());\n//         userService.getAll()\n//             .then(\n//                 users => dispatch(success(users)),\n//                 error => dispatch(failure(error))\n//             );\n//     };\n//     function request() { return { type: userConstants.GETALL_REQUEST } }\n//     function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n//     function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n// }\n// // prefixed function name with underscore because delete is a reserved word in javascript\n// function _delete(id) {\n//     return dispatch => {\n//         dispatch(request(id));\n//         userService.delete(id)\n//             .then(\n//                 user => { \n//                     dispatch(success(id));\n//                 },\n//                 error => {\n//                     dispatch(failure(id, error));\n//                 }\n//             );\n//     };\n//     function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n//     function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n//     function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n// }","map":{"version":3,"sources":["/home/petar/Desktop/react-redux-boilerplate/react-redux-starter/client/src/_store/actions/user.actions.js"],"names":["userConstants","userService","history","userActions","login","data","dispatch","request","email","then","user","success","localStorage","setItem","JSON","stringify","push","error","console","log","failure","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,KADuB,CAEvB;AACA;AACA;AACA;;AALuB,CAApB;;AAOP,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACnB,SAAOC,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAACC,OAAO,CAAC;AAAEC,MAAAA,KAAK,EAACH,IAAI,CAACG;AAAb,KAAD,CAAR,CAAR;AACCP,IAAAA,WAAW,CAACG,KAAZ,CAAkBC,IAAlB,EACKI,IADL,CAEQC,IAAI,IAAI;AACJJ,MAAAA,QAAQ,CAACK,OAAO,CAACD,IAAD,CAAR,CAAR;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAA7B;AACAR,MAAAA,OAAO,CAACc,IAAR,CAAa,MAAb;AACH,KANT,EAOQC,KAAK,IAAI;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB;AACEX,MAAAA,QAAQ,CAACc,OAAO,CAACH,KAAD,CAAR,CAAR;AACH,KAVT;AAYH,GAdD;;AAgBA,WAASV,OAAT,CAAiBG,IAAjB,EAAuB;AAAE,WAAO;AAAEW,MAAAA,IAAI,EAAErB,aAAa,CAACsB,aAAtB;AAAqCZ,MAAAA;AAArC,KAAP;AAAoD;;AAC7E,WAASC,OAAT,CAAiBD,IAAjB,EAAuB;AAAE,WAAO;AAAEW,MAAAA,IAAI,EAAErB,aAAa,CAACuB,aAAtB;AAAqCb,MAAAA;AAArC,KAAP;AAAoD;;AAC7E,WAASU,OAAT,CAAiBH,KAAjB,EAAwB;AAAE,WAAO;AAAEI,MAAAA,IAAI,EAAErB,aAAa,CAACwB,aAAtB;AAAqCP,MAAAA;AAArC,KAAP;AAAqD;AAChF,C,CAGD;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import { userConstants } from '../constants';\nimport userService from '../../_services/user.service';\nimport { history } from '../../_utils';\n\nexport const userActions = {\n    login,\n    // logout,\n    // register,\n    // getAll,\n    // delete: _delete\n};\nfunction login(data) {\n  return dispatch => {\n     dispatch(request({ email:data.email }));\n      userService.login(data)\n          .then(\n              user => { \n                  dispatch(success(user));\n                  localStorage.setItem('user', JSON.stringify(user));\n                  history.push('/app');\n              },\n              error => {\n                console.log('error',error)\n                  dispatch(failure(error));\n              }\n          );\n  };\n\n  function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n  function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n  function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\n\n// function logout() {\n//     userService.logout();\n//     return { type: userConstants.LOGOUT };\n// }\n\n// function register(user) {\n//     return dispatch => {\n//         dispatch(request(user));\n\n//         userService.register(user)\n//             .then(\n//                 user => { \n//                     dispatch(success());\n//                     history.push('/login');\n//                     dispatch(alertActions.success('Registration successful'));\n//                 },\n//                 error => {\n//                     dispatch(failure(error));\n//                     dispatch(alertActions.error(error));\n//                 }\n//             );\n//     };\n\n//     function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n//     function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n//     function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n// }\n\n// function getAll() {\n//     return dispatch => {\n//         dispatch(request());\n\n//         userService.getAll()\n//             .then(\n//                 users => dispatch(success(users)),\n//                 error => dispatch(failure(error))\n//             );\n//     };\n\n//     function request() { return { type: userConstants.GETALL_REQUEST } }\n//     function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n//     function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n// }\n\n// // prefixed function name with underscore because delete is a reserved word in javascript\n// function _delete(id) {\n//     return dispatch => {\n//         dispatch(request(id));\n\n//         userService.delete(id)\n//             .then(\n//                 user => { \n//                     dispatch(success(id));\n//                 },\n//                 error => {\n//                     dispatch(failure(id, error));\n//                 }\n//             );\n//     };\n\n//     function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n//     function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n//     function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n// }"]},"metadata":{},"sourceType":"module"}