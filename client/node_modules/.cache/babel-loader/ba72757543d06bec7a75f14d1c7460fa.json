{"ast":null,"code":"var _jsxFileName = \"/home/petar/Desktop/react-redux-boilerplate/react-redux-starter/client/src/_components/auth/loginComponent/login.js\";\nimport React, { useState, useContext } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'; //import { useHistory } from 'react-router-dom';\n\nimport userService from '../../../_services/user.service';\nimport { sessionService } from '../../../_sessionService/storage';\nimport { userActions } from \"../../../_store/actions/user.actions\";\n\nconst Login = () => {\n  //const history = useHistory();\n  const [error, setError] = useState(false); //const loggingIn = useSelector(state => state.auth.loggingIn);\n\n  const dispatch = useDispatch();\n  const [userData, setUserData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    setError(false);\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData(userData => ({ ...userData,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      dispatch(userActions.login(userData)); // let response = await userService.login(userData);\n      // sessionService.create(response);\n      // setUser(sessionService.getUser());\n      // if (sessionService.isAuth()) {\n      //     if(response.user.isCompany){\n      //         history.push(`/dashboard/company/${response.user._id}`);\n      //     }else{\n      //         history.push(\"/dashboard/folder\");\n      //     }\n      //     toast.success(\"User is successfully loged !\", toastOptions);\n      // }\n    } else {\n      setError(true);\n    }\n  };\n\n  const validateForm = () => {\n    return userData.email && userData.password.length > 3;\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"auth-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"auth-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Login \"), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group custom-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    className: \"form-control\",\n    type: \"text\",\n    name: \"email\",\n    onChange: handleChange,\n    placeholder: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group custom-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    className: \"form-control\",\n    type: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 57\n    }\n  }, \"All fields are required\")) : null), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"SIgn in\"));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/petar/Desktop/react-redux-boilerplate/react-redux-starter/client/src/_components/auth/loginComponent/login.js"],"names":["React","useState","useContext","useDispatch","useSelector","userService","sessionService","userActions","Login","error","setError","dispatch","userData","setUserData","email","password","handleChange","e","name","value","target","handleSubmit","preventDefault","validateForm","login","length"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\n//import { useHistory } from 'react-router-dom';\nimport userService from '../../../_services/user.service';\nimport { sessionService } from '../../../_sessionService/storage';\nimport { userActions } from \"../../../_store/actions/user.actions\";\n\nconst Login = () => {\n    //const history = useHistory();\n    const [error, setError] = useState(false);\n    //const loggingIn = useSelector(state => state.auth.loggingIn);\n    const dispatch = useDispatch();\n    const [userData, setUserData] = useState({\n        email: \"\",\n        password: \"\"\n    });\n\n    const handleChange = e => {\n        setError(false);\n        const { name, value } = e.target;\n        setUserData(userData => ({ ...userData, [name]: value }));\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (validateForm()) {\n            dispatch(userActions.login(userData));\n            // let response = await userService.login(userData);\n            // sessionService.create(response);\n           // setUser(sessionService.getUser());\n            // if (sessionService.isAuth()) {\n            //     if(response.user.isCompany){\n            //         history.push(`/dashboard/company/${response.user._id}`);\n            //     }else{\n            //         history.push(\"/dashboard/folder\");\n            //     }\n              \n            //     toast.success(\"User is successfully loged !\", toastOptions);\n            // }\n        } else {\n            setError(true);\n        }\n    }\n\n    const validateForm = () => {\n        return userData.email && userData.password.length > 3;\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className=\"auth-form\">\n            <h6 className=\"auth-title\">Login </h6>\n            <section>\n                <div className=\"form-group custom-input\">\n                    <input id='email' className=\"form-control\" type=\"text\" name=\"email\" onChange={handleChange} placeholder=\"email\" />\n                </div>\n                <div className=\"form-group custom-input\">\n                    <input id='password' className=\"form-control\" type=\"password\" name=\"password\" onChange={handleChange} placeholder=\"password\" />\n                </div>\n                {error ? <div className=\"message-alert\"><p>All fields are required</p></div> : null}\n            </section>\n            <button type=\"submit\" className=\"btn btn-blue\" >SIgn in</button>\n        </form>\n    )\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}